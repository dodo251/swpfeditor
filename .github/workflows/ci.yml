name: Build & Package (WPF)

on:
  push:
  pull_request:

jobs:
  build-test-package:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Restore
        run: dotnet restore

      - name: Build Domain Layer (Cross-Platform)
        run: dotnet build SwpfEditor.CrossPlatform.sln --configuration Release --no-restore --nologo

      - name: Test Domain Layer
        run: dotnet test SwpfEditor.CrossPlatform.sln --configuration Release --no-build --nologo

      - name: Build Full Solution (Windows)
        run: dotnet build SwpfEditor.sln --configuration Release --no-restore --nologo

      # 找到第一个非测试项目作为应用发布目标（WPF）
      - name: Detect App csproj
        id: detect
        run: |
          $proj = Get-ChildItem -Recurse -Filter *.csproj |
                  Where-Object { $_.FullName -notmatch 'Test|Tests' -and $_.FullName -match 'App' } |
                  Select-Object -First 1
          if (-not $proj) { throw "No app csproj found." }
          "APP_CSPROJ=$($proj.FullName)" | Out-File -FilePath $env:GITHUB_ENV -Append
          Write-Host "Detected: $($proj.FullName)"
        shell: pwsh

      - name: Publish win-x64 (self-contained)
        run: |
          $out = "out/win-x64"
          dotnet publish "$env:APP_CSPROJ" -c Release -r win-x64 `
            -p:PublishSingleFile=true `
            -p:IncludeNativeLibrariesForSelfExtract=true `
            -p:PublishTrimmed=false `
            --self-contained true `
            -o $out
          Compress-Archive -Path "$out/*" -DestinationPath "SwpfEditor-win-x64-${{ github.run_number }}.zip"
        shell: pwsh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: SwpfEditor-win-x64-${{ github.run_number }}
          path: SwpfEditor-win-x64-${{ github.run_number }}.zip

  # Cross-platform testing job for validation
  test-cross-platform:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Restore Cross-Platform
        run: dotnet restore SwpfEditor.CrossPlatform.sln

      - name: Build Cross-Platform
        run: dotnet build SwpfEditor.CrossPlatform.sln --configuration Release --no-restore --nologo

      - name: Test Cross-Platform
        run: dotnet test SwpfEditor.CrossPlatform.sln --configuration Release --no-build --nologo

      - name: Run Demo
        run: dotnet run --project src/SwpfEditor.Demo/SwpfEditor.Demo.csproj --configuration Release --no-build
